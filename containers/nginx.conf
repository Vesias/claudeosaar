events {
    worker_connections 1024;
}

http {
    upstream api_servers {
        least_conn;
        server api:6600 max_fails=3 fail_timeout=30s;
    }

    upstream ui_servers {
        least_conn;
        server ui:6601 max_fails=3 fail_timeout=30s;
    }

    upstream mcp_servers {
        least_conn;
        server mcp-server:6602 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ui_limit:10m rate=20r/s;

    # API Server
    server {
        listen 443 ssl http2;
        server_name api.claudeosaar.saarland;

        ssl_certificate /etc/letsencrypt/live/claudeosaar.saarland/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/claudeosaar.saarland/privkey.pem;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Websocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # UI Server
    server {
        listen 443 ssl http2;
        server_name app.claudeosaar.saarland;

        ssl_certificate /etc/letsencrypt/live/claudeosaar.saarland/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/claudeosaar.saarland/privkey.pem;

        location / {
            limit_req zone=ui_limit burst=50 nodelay;
            
            proxy_pass http://ui_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # MCP Server
    server {
        listen 443 ssl http2;
        server_name mcp.claudeosaar.saarland;

        ssl_certificate /etc/letsencrypt/live/claudeosaar.saarland/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/claudeosaar.saarland/privkey.pem;

        location / {
            proxy_pass http://mcp_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name *.claudeosaar.saarland;
        return 301 https://$host$request_uri;
    }
}