version: '3.8'

services:
  # API Server (Production)
  api:
    image: claudeosaar/api:production
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - MCP_SERVER_URL=http://mcp-server:6602
    depends_on:
      - postgres
      - redis
      - mcp-server
    networks:
      - claude-net
    volumes:
      - /var/claudeosaar/user_mounts:/user_mounts
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # UI Server (Production)
  ui:
    image: claudeosaar/ui:production
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.claudeosaar.saarland
      - NEXT_PUBLIC_STRIPE_KEY=${STRIPE_PUBLIC_KEY}
    depends_on:
      - api
    networks:
      - claude-net
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 2G

  # MCP Server (Production)
  mcp-server:
    image: claudeosaar/mcp-server:production
    restart: always
    environment:
      - NODE_ENV=production
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    networks:
      - claude-net
    volumes:
      - /var/claudeosaar/user_mounts:/user_mounts
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 2G

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - api
      - ui
    networks:
      - claude-net

  # Database (Production)
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=claudeosaar
      - POSTGRES_USER=claude
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - claude-net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  # Redis Cache (Production)
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - claude-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  # Qdrant Vector Database (Production)
  qdrant:
    image: qdrant/qdrant
    restart: always
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - claude-net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

volumes:
  postgres-data:
  redis-data:
  qdrant-data:

networks:
  claude-net:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.10.0.0/16