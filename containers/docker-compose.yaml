version: '3.8'

services:
  # API Server (Node.js/TypeScript)
  api:
    build:
      context: ../src/api
      dockerfile: Dockerfile
    ports:
      - "6600:6600"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - MCP_SERVER_URL=http://mcp-server:6602
    depends_on:
      - postgres
      - redis
      - mcp-server
    networks:
      - claude-net
    volumes:
      - ../user_mounts:/user_mounts

  # MCP Server
  mcp-server:
    build:
      context: ../.claude/mcp-server
      dockerfile: Dockerfile
    ports:
      - "6602:6602"
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    networks:
      - claude-net
    volumes:
      - ../user_mounts:/user_mounts

  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      - POSTGRES_DB=claudeosaar
      - POSTGRES_USER=claude
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ../volumes/postgres:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - claude-net

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-defaultpass}
    volumes:
      - ../volumes/redis:/data
    networks:
      - claude-net

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - ../volumes/qdrant:/qdrant/storage
    networks:
      - claude-net

  # shadcn-ui MCP Server
  shadcn-ui-mcp:
    build:
      context: ../.claude/mcp-plugins/shadcn-ui
      dockerfile: Dockerfile
    ports:
      - "6605:8080"
    environment:
      - FRAMEWORK=react
    networks:
      - claude-net
    profiles:
      - mcp-plugins

  # A2A Coordinator (for multi-agent support)
  a2a-coordinator:
    build:
      context: ../.claude/a2a
      dockerfile: Dockerfile
    ports:
      - "6604:6604"
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - COORDINATOR_MODE=master
    networks:
      - claude-net
    profiles:
      - enterprise

  # Monitoring (Grafana)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "6603:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - ../volumes/grafana:/var/lib/grafana
    networks:
      - claude-net
    profiles:
      - monitoring

networks:
  claude-net:
    driver: bridge